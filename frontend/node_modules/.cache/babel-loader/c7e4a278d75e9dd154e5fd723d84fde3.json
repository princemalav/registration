{"ast":null,"code":"import _slicedToArray from \"/home/cog/Milkan/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cog/Milkan/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction App() {\n  let json;\n  useEffect(() => {\n    async function fetchURL() {\n      try {\n        const resource = await fetch('http://127.0.0.1:8000/api/customers');\n        json = await resource.json();\n        console.log(\"JSON is : \" + json);\n      } catch (e) {\n        console.log(\"Error : \" + e);\n      }\n    }\n\n    fetchURL();\n  }, []);\n\n  const _useState = useState(json),\n        _useState2 = _slicedToArray(_useState, 2),\n        names = _useState2[0],\n        setNames = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Hii happy hacking\"), this.state.names.map(key => React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, key)), this.state.allNames.map(item => React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, item)));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cog/Milkan/frontend/src/App.js"],"names":["React","useState","useEffect","App","json","fetchURL","resource","fetch","console","log","e","names","setNames","state","map","key","allNames","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;;AAEA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACX,MAAIC,IAAJ;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeG,QAAf,GAAyB;AACvB,UAAG;AACD,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAA5B;AACAH,QAAAA,IAAI,GAAG,MAAME,QAAQ,CAACF,IAAT,EAAb;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAaL,IAAzB;AACD,OAJD,CAKA,OAAMM,CAAN,EAAQ;AACNF,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAWC,CAAvB;AACD;AACF;;AACDL,IAAAA,QAAQ;AACT,GAZQ,EAaN,EAbM,CAAT;;AAFW,oBAgBaJ,QAAQ,CAACG,IAAD,CAhBrB;AAAA;AAAA,QAgBLO,KAhBK;AAAA,QAgBCC,QAhBD;;AAkBX,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEI,KAAKC,KAAL,CAAWF,KAAX,CAAiBG,GAAjB,CAAqBC,GAAG,IACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,GAAJ,CADF,CAFJ,EAKG,KAAKF,KAAL,CAAWG,QAAX,CAAoBF,GAApB,CAAwBG,IAAI,IAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ,CADD,CALH,CADA;AAWH;;AAED,eAAed,GAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n    let json;\n    useEffect(() => {\n      async function fetchURL(){\n        try{\n          const resource = await fetch('http://127.0.0.1:8000/api/customers');\n          json = await resource.json();\n          console.log(\"JSON is : \"+json); \n        }\n        catch(e){\n          console.log(\"Error : \"+e);\n        }\n      }\n      fetchURL();\n    }\n      ,[]);\n    const[names,setNames] = useState(json);\n    \n    return (\n    <div>\n      <h3>Hii happy hacking</h3>\n      { this.state.names.map(key => (\n          <p>{key}</p>\n      )) }\n      {this.state.allNames.map(item => (\n        <p>{item}</p>\n        ))}\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}